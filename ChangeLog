StarPU 0.2.901 aka 0.3-rc1 (svn revision 1236)
==============================================
The asynchronous heterogeneous multi-accelerator release

  * Many API changes and code cleanups
    - Implement starpu_get_worker_id
    - Implement starpu_get_worker_name
    - Implement starpu_get_worker_type
    - Implement starpu_get_worker_count
    - Implement starpu_display_codelet_stats
    - Implement starpu_prefetch_data_on_node
    - Expose the starpu_data_set_wb_mask function
  * Support nvidia (heterogeneous) multi-GPU
  * Add the data request mechanism
    - All data transfers use data requests now
    - Implement asynchronous data transfers
    - Implement prefetch mechanism
    - Chain data requests to support GPU->STARPU_RAM->GPU transfers 
  * Make it possible to bypass the scheduler and to assign a task to a specific
    worker
  * Support restartable tasks to reinstanciate dependencies task graphs
  * Improve performance prediction
    - Model data transfer overhead
    - One model is created for each accelerator
  * Support for CUDA's driver API is deprecated
  * The STARPU_WORKERS_GPUID and STARPU_WORKERS_CPUID env. variables make it possible to
    specify where to bind the workers
  * Use the hwloc library to detect the actual number of cores

StarPU 0.2.0 (svn revision 1013)
==============================================
The Stabilizing-the-Basics release

  * Various API cleanups
  * Mac OS X is supported now
  * Add dynamic code loading facilities onto Cell's SPUs
  * Improve performance analysis/feedback tools
  * Application can interact with StarPU tasks
    - The application may access/modify data managed by the DSM
    - The application may wait for the termination of a (set of) task(s)
  * An initial documentation is added
  * More examples are supplied


StarPU 0.1.0 (svn revision 794)
==============================================
First release.

Status:
 * Only supports Linux platforms yet
 * Supported architectures
   - multicore CPUs
   - NVIDIA GPUs (with CUDA 2.x)
   - experimental Cell/BE support

Changes:
 * Scheduling facilities
   - run-time selection of the scheduling policy
   - basic auto-tuning facilities
 * Software-based DSM
   - transparent data coherency management
   - High-level expressive interface

